<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>My first three.js app</title>
		<style>
			body { margin: 0; }
			canvas { display: block; }
		</style>
		
	</head>
	<body>
		<h1>
			Three JS Rocks
		</h1>
		   <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/102/three.js"></script>
    	   <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.1.2/TweenMax.min.js"></script>
		   <script>

			let camera, scene, renderer, mesh;
			   
			function init() {
				
				scene = new THREE.Scene();
				scene.background = new THREE.Color( 0x8FBCD4 );

				camera = new THREE.PerspectiveCamera(35, window.innerWidth/window.innerHeight, 0.1, 100);
				camera.position.set( 0, 0, 10 );

				const light = new THREE.DirectionalLight( 0xffffff, 3.0 ); // secnod number is the intensity of the light 
				light.position.set( 10, 10, 10 );
				scene.add( light );

				renderer = new THREE.WebGLRenderer({antialias: true});
				renderer.setSize(window.innerWidth, window.innerHeight);
				renderer.setPixelRatio( window.devicePixelRatio );

				document.body.appendChild(renderer.domElement);


				const geometry = new THREE.BoxBufferGeometry(1,1,1);
				const material = new THREE.MeshStandardMaterial({ color: 0x800080 });
				mesh = new THREE.Mesh(geometry, material);

				scene.add(mesh);

				const textureLoader = new THREE.TextureLoader();
	
				const texture = textureLoader.load('textures/uv_test_bw.png');
				texture.encoding = THREE.sRGBEEncoding; // set "color space" of texture
				texture.anistropy = 16; // reducing blurring at galncing angles
				
				const material = new THREE.MeshStandardMaterial({
					map: texture,
				});
				
				
				
				
				
				
				
				
				
				
				
				
				renderer.setAnimationLoop( () => {
					update();
					render();
				});
			}
			  
			function update() {
				mesh.rotation.z += 0.01;
				mesh.rotation.x += 0.01;
				mesh.rotation.y += 0.01;
			}
			
			function render() {
				renderer.render( scene, camera );
			}
			  
			function onWindowResize() {
			  camera.aspect = window.innerWidth / window.innerHeight;
			  camera.updateProjectionMatrix();
			  renderer.setSize( window.innerWidth, window.innerHeight );
			}
			   
			window.addEventListener('resize', onWindowResize );
		
			init();
			   
		</script>
	</body>
</html>
			
			